# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v1.4.0
      with:
        # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
        java-version: 14
        # The package type (jre, jdk, jdk+fx)
        java-package: jdk # optional, default is jdk
        # The architecture (x86, x64) of the package.
        architecture: x64 # optional, default is x64
        # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
        #jdkFile: # optional
        # ID of the distributionManagement repository in the pom.xml file. Default is `github`
        #server-id: # optional, default is github
        # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
        #server-username: # optional, default is GITHUB_ACTOR
        # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
        #server-password: # optional, default is GITHUB_TOKEN
        # Path to where the settings.xml file will be written. Default is ~/.m2.
        #settings-path: # optional
        # GPG private key to import. Default is empty string.
        #gpg-private-key: # optional
        # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
        #gpg-passphrase: # optional
    - name: Build with Maven
      run: mvn -B package --file pom.xml
